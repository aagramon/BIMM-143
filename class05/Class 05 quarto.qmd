---
title: "Class 05 BIMM 143"
author: "Arturo Agramont"
format: html
date: 2023-04-19
editor_options: 
  chunk_output_type: console
---

We are going to start by generating the plot of class 04

```{r}
plot(cars)
```

# GGplot2

First we need to install the package. We do this by using the install.packages command.

```{r}
#install.packages("ggplot2")
```

After that we need to load the package

```{r}
library("ggplot2")
```

We are going to build the plot of the cars data frame by using ggplot2.

```{r}
ggplot(data=cars) + aes(x=speed, y=dist) + geom_point()
ggplot(data=cars) + aes(x=speed, y=dist) + geom_point() + geom_smooth(method = 'lm') + labs(title= "Distance Vs. Speed", subtitle = "A nice subtitle!", caption = "BIMM143", x = "Speed(MPH)", y = "Distance(feet)" +  theme_bw())
```

**Q1.** For which phases is data visualization important in our scientific workflows?

Communication of Results, Exploratory Data Analysis (EDA), and Detection of outliers

**Q2.** True or False? The ggplot2 package comes already installed with R?

False

**Q.** Which plot types are typically NOT used to compare distributions of numeric variables?

Network Graphs

Q. Which statement about data visualization with ggplot2 is incorrect?

ggplot2 is the only way to create plots in R.\

# Plotting Expression Data

First we need to load the data from the URL.

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

Then make an initial plot using ggplot.

```{r}
ggplot(data = genes) + aes(x=Condition1, y= Condition2) + geom_point()

```

Finding the number of "up" regulated and the percentage

```{r}
table(genes["State"])
round( table(genes["State"])/nrow(genes) *100, 2)
```

Adding Color and titles to the plot

```{r}
p = ggplot(data = genes) + aes(x=Condition1, y= Condition2, col = State) + geom_point()
p
p+ scale_color_manual( values = c("blue", "gray", "red")) + labs(title = "Gene expression Changes Upon Drug Treatment", x= "Control(No Drug)", y = "Drug Treatment")
```

# Gapminder

First install gapminder package and load the package.

```{r}
#install.packages("gapminder")
library(gapminder)
```

Install dplyr

```{r}
# install.packages("dplyr") 
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```

First plot

```{r}
ggplot(data = gapminder_2007) + aes(x = gdpPercap, y = lifeExp)+geom_point()
```

Alpha

```{r}
ggplot(data = gapminder_2007) + aes(x = gdpPercap, y = lifeExp)+geom_point(alpha=0.5)
```

More variables to aes()

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```
